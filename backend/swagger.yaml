openapi: 3.0.0
info:
  title: Certificate Verification API
  description: API for managing users, certificates, and file uploads.
  version: 1.0.0
servers:
  - url: /
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [admin, user]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserRegister:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    Certificate:
      type: object
      properties:
        id:
          type: integer
        student_number:
          type: string
        name:
          type: string
        branch:
          type: string
        year_of_passing:
          type: string
    Upload:
      type: object
      properties:
        id:
          type: integer
        filename:
          type: string
        uploaded_by:
          type: string
        uploaded_time:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      security: []   # No token needed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request

  /auth/login:
    post:
      summary: Login user
      security: []   # No token needed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /api/certificates:
    get:
      summary: Get all certificates
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of certificates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'

  /api/certificates/{student_number}:
    get:
      summary: Get a certificate by student number
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: student_number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Certificate found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '404':
          description: Certificate not found

  /api/uploads:
    post:
      summary: Upload a file
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: File uploaded successfully
        '400':
          description: Bad request

    get:
      summary: Get all uploads
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of uploads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Upload'
